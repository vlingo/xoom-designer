package io.vlingo.xoomapp.infrastructure;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import java.util.Collections;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;
import io.vlingo.xoomapp.model.*;

public class NameData {

  public final String firstName;
  public final String lastName;

  public static NameData from(final Name name) {
    if (name == null) {
      return NameData.empty();
    } else {
      return from(name.firstName, name.lastName);
    }
  }

  public static NameData from(final String firstName, final String lastName) {
    return new NameData(firstName, lastName);
  }

  public static Set<NameData> fromAll(final Set<Name> correspondingObjects) {
    return correspondingObjects == null ? Collections.emptySet() : correspondingObjects.stream().map(NameData::from).collect(Collectors.toSet());
  }

  public static List<NameData> fromAll(final List<Name> correspondingObjects) {
    return correspondingObjects == null ? Collections.emptyList() : correspondingObjects.stream().map(NameData::from).collect(Collectors.toList());
  }

  private NameData(final String firstName, final String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
  }

  public Name toName() {
    return Name.from(firstName, lastName);
  }

  public static NameData empty() {
    return new NameData(null, null);
  }

  @Override
  public int hashCode() {
    return new HashCodeBuilder(31, 17)
              .append(firstName)
              .append(lastName)
              .toHashCode();
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if (other == null || getClass() != other.getClass()) {
      return false;
    }
    NameData another = (NameData) other;
    return new EqualsBuilder()
              .append(this.firstName, another.firstName)
              .append(this.lastName, another.lastName)
              .isEquals();
  }

  @Override
  public String toString() {
    return new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE)
              .append("firstName", firstName)
              .append("lastName", lastName)
              .toString();
  }
}
