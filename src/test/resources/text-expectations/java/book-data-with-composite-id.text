package io.vlingo.xoomapp.infrastructure;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import java.util.stream.Collectors;
import java.time.LocalDate;
import java.util.*;
import io.vlingo.xoomapp.model.book.BookState;

@SuppressWarnings("all")
public class BookData {
  public final String id;
  public final String authorId;
  public final String title;
  public final String publisher;
  public final LocalDate publicationDate;

  public static BookData from(final BookState bookState) {
    return from(bookState.id, bookState.authorId, bookState.title, bookState.publisher, bookState.publicationDate);
  }

  public static BookData from(final String id, final String authorId, final String title, final String publisher, final LocalDate publicationDate) {
    return new BookData(id, authorId, title, publisher, publicationDate);
  }

  public static List<BookData> fromAll(final List<BookState> states) {
    return states.stream().map(BookData::from).collect(Collectors.toList());
  }

  public static BookData empty() {
    return from(BookState.identifiedBy(""));
  }

  private BookData(final String id, final String authorId, final String title, final String publisher, final LocalDate publicationDate) {
    this.id = id;
    this.authorId = authorId;
    this.title = title;
    this.publisher = publisher;
    this.publicationDate = publicationDate;
  }

  public BookState toBookState() {
    return new BookState(id, authorId, title, publisher, publicationDate);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if (other == null || getClass() != other.getClass()) {
      return false;
    }
    BookData another = (BookData) other;
    return new EqualsBuilder()
              .append(this.id, another.id)
              .append(this.authorId, another.authorId)
              .append(this.title, another.title)
              .append(this.publisher, another.publisher)
              .append(this.publicationDate, another.publicationDate)
              .isEquals();
  }

  @Override
  public String toString() {
    return new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE)
              .append("id", id)
              .append("authorId", authorId)
              .append("title", title)
              .append("publisher", publisher)
              .append("publicationDate", publicationDate)
              .toString();
  }

}