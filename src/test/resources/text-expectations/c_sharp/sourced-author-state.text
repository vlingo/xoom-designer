using System;
using java.time.LocalDate;
using Io.Vlingo.Xoomapp;
using Vlingo.Xoom.Symbio;
using Vlingo.Xoom.Wire.Nodes;

namespace Io.Vlingo.Xoomapp.Model.Author;

public sealed class AuthorState
{
  public string Id {get;}
  public Name Name {get;}
  public List<Rank> Rank {get;} = new List<Rank>();
  public ISet<String> RelatedAuthors {get;} = new HashSet<String>();
  public LocalDate AvailableOn {get;}

  public static AuthorState IdentifiedBy(string id) => new AuthorState(id, null, new List<Rank>(), new HashSet<String>(), LocalDate.Now);

  public AuthorState(string id, Name name, List<Rank> rank, ISet<String> relatedAuthors, LocalDate availableOn)
  {
    Id = id;
    Name = name;
    Rank.AddRange(rank);
    RelatedAuthors.AddRange(relatedAuthors);
    AvailableOn = availableOn;
  }

  public AuthorState WithName(Name name)
  {
    //TODO: Implement command logic.
    return new AuthorState(Id, name, Rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState ChangeRank(List<Rank> rank)
  {
    //TODO: Implement command logic.
    return new AuthorState(Id, Name, rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState Hide()
  {
    //TODO: Implement command logic.
    return new AuthorState(Id, Name, Rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState RelateAuthor(String relatedAuthor)
  {
    //TODO: Implement command logic.
    RelatedAuthors.Add(relatedAuthor);
    return new AuthorState(Id, Name, Rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState RelateAuthors(ISet<String> relatedAuthors)
  {
    //TODO: Implement command logic.
    RelatedAuthors.RemoveAll(relatedAuthors);
    relatedAuthors.AddRange(relatedAuthors);
    return new AuthorState(Id, Name, Rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState UnrelateAuthor(String relatedAuthor)
  {
    //TODO: Implement command logic.
    RelatedAuthors.Remove(relatedAuthor);
    return new AuthorState(Id, Name, Rank, RelatedAuthors, AvailableOn);
  }

  public AuthorState ReplaceAllRelatedAuthors(ISet<String> relatedAuthors)
  {
    //TODO: Implement command logic.
    return new AuthorState(Id, Name, Rank, relatedAuthors, AvailableOn);
  }

}
